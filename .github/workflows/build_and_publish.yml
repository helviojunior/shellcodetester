name: PyPI Build ShellcodeTester

on:
  release:
    types: [published]

jobs:
  lint:
    name: Check syntaxs errors and warnings
    runs-on: ubuntu-latest
    if:
      github.event_name == 'push' || github.event.pull_request.head.repo.full_name !=
      github.repository

    steps:
      - name: Checkout ShellcodeTester
        uses: actions/checkout@v3

      - name: Setup Python 3.9
        uses: actions/setup-python@v3
        with:
          python-version: 3.9

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install flake8

      - name: Check syntax errors
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

      - name: Check PEP8 warnings
        run: |
          flake8 . --count --ignore=E1,E2,E3,E501,W291,W293 --exit-zero --max-complexity=65 --max-line-length=127 --statistics

  binutils_linux:
    name: Build Binutils Linux
    needs: lint
    runs-on: ubuntu-latest
    if:
      github.event_name == 'push' || github.event.pull_request.head.repo.full_name !=
      github.repository
    env:
      bin_version: '2.40'
      bin_platform: 'x86_64-pc-linux-gnu'

    strategy:
      fail-fast: false

    steps:
      - name: Set up GCC
        uses: egor-tensin/setup-gcc@v1
        with:
          version: latest
          platform: x64

      - name: Install dependencies
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: texinfo flex bison libgmp-dev libmpfr-dev make wget
          version: 1.0

      - name: Download binutils
        run: |
          mkdir $GITHUB_WORKSPACE/build/
          cd $GITHUB_WORKSPACE/build/
          wget http://ftp.gnu.org/gnu/binutils/binutils-$bin_version.tar.gz
          tar xzf binutils-$bin_version.tar.gz

      - name: Build binutils
        run: |
          cd $GITHUB_WORKSPACE/build/binutils-$bin_version
          CC=gcc ./configure --target=$bin_platform --disable-nls
          make configure-host
          make LDFLAGS="-all-static"
          cp ./binutils/objdump ${{ github.workspace }}/objdump_linux

      - uses: actions/upload-artifact@v2
        with:
          name: objdump_linux
          path: ${{ github.workspace }}/objdump_linux
          retention-days: 3

  build:
    name: Build
    needs: binutils_linux
    runs-on: ubuntu-latest
    if:
      github.event_name == 'push' || github.event.pull_request.head.repo.full_name !=
      github.repository

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
        experimental: [false]
        include:
          - python-version: "3.11"
            experimental: true
    continue-on-error: ${{ matrix.experimental }}

    steps:
      - name: Checkout ShellcodeTester
        uses: actions/checkout@v3

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt -r tests/requirements-test.txt

      - name: Build artifact
        run: |
          python setup.py sdist

  upload_release:
    name: Upload Release Asset
    needs: build
    runs-on: ubuntu-latest
    if:
      github.event_name == 'push' || github.event.pull_request.head.repo.full_name !=
      github.repository
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    strategy:
      fail-fast: false

    steps:
    - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./my-artifact.zip
          asset_name: my-artifact.zip
          asset_content_type: application/zip

  publish:
    name: Publish on Live Environment
    needs: build
    runs-on: ubuntu-latest
    if:
      github.event_name == 'push' || github.event.pull_request.head.repo.full_name !=
      github.repository

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9"]
        experimental: [false]
    continue-on-error: ${{ matrix.experimental }}

    steps:
      - name: Checkout ShellcodeTester
        uses: actions/checkout@v3

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt -r tests/requirements-test.txt

      - name: Build artifact
        run: |
          python setup.py sdist

      - name: Publish package in Live Environment
        #if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.prod_pypi_password }}
