# GitHub Action workflow to build and run ShellcodeTester's tests
#

name: Test Build

on:
    push:
      branches: [ master ]
    pull_request:
      branches: [ master ]

jobs:
  lint:
    name: Check syntaxs errors and warnings
    runs-on: ubuntu-latest
    if:
      github.event_name == 'push' || github.event.pull_request.head.repo.full_name !=
      github.repository

    steps:
      - name: Checkout KnowsMore
        uses: actions/checkout@v3

      - name: Setup Python 3.8
        uses: actions/setup-python@v3
        with:
          python-version: 3.8

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install flake8

      - name: Check syntax errors
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

      - name: Check PEP8 warnings
        run: |
          flake8 . --count --ignore=E1,E2,E3,E501,W291,W293 --exit-zero --max-complexity=65 --max-line-length=127 --statistics

  test:
    name: Run unit tests and build wheel
    needs: lint
    runs-on: ${{ matrix.os }}
    if:
      github.event_name == 'push' || github.event.pull_request.head.repo.full_name !=
      github.repository

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
        experimental: [false]
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - python-version: "3.7"
            experimental: false
            os: ubuntu-20.04
          - python-version: "3.11"
            experimental: true
            os: ubuntu-latest
    continue-on-error: ${{ matrix.experimental }}

    steps:
      - name: Checkout shellcodetester
        uses: actions/checkout@v3

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r tests/requirements-test.txt

      - name: Install shellcodetester
        run: |
          pip install .

      - name: Run unit tests
        run: |
          pytest -s tests/tests.py

      - name: Build artifact
        run: |
          python setup.py sdist

  get_builds:
    name: Get last released binaries
    needs: lint
    runs-on: ubuntu-latest
    steps:

      - name: checkout
        uses: actions/checkout@v2

      - name: Install dependencies
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: wget
          version: 1.0

      - name: Download last release
        run: |
          wget -O $GITHUB_WORKSPACE/mingw-latest.zip https://github.com/helviojunior/shellcodetester/releases/latest/download/mingw-latest.zip
          wget -O $GITHUB_WORKSPACE/binutils.zip https://github.com/helviojunior/shellcodetester/releases/latest/download/binutils.zip

      - uses: actions/upload-artifact@v2
        with:
          name: binutils.zip
          path: ${{ GITHUB_WORKSPACE }}/binutils.zip
          retention-days: 3

  publish:
    name: Publish on Test Environment
    needs: [test, get_builds]
    runs-on: ubuntu-latest
    if:
      github.event_name == 'push' || github.event.pull_request.head.repo.full_name !=
      github.repository

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9"]
        experimental: [false]
    continue-on-error: ${{ matrix.experimental }}

    steps:
      - name: Checkout ShellcodeTester
        uses: actions/checkout@v3

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: rpm2cpio wget 7zip
          version: 1.0

      - name: Download arfactory (linux)
        uses: actions/download-artifact@v3
        id: download
        with:
          name: binutils.zip
          path: /tmp/

      - name: Copy binaries
        run: |
          mkdir shell_bins/linux/
          mkdir shell_bins/windows/
          mkdir shell_bins/macosx/
          unzip -o ${{steps.mingwbuild.outputs.download-path}}/binutils.zip -d shell_bins/
          echo "" > shell_bins/__init__.py
          echo "" > shell_bins/linux/__init__.py
          echo "" > shell_bins/windows/__init__.py
          echo "" > shell_bins/macosx/__init__.py

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r tests/requirements-test.txt

      - name: Change Package version
        run: |
          oldv=$( grep '__version__' shell_libs/__meta__.py | grep -oE '[0-9\.]+')
          current=$(date '+%Y%m%d%H%M%S')
          meta=$(cat shell_libs/__meta__.py | sed "s/__version__.*/__version__ = '"${oldv}"-"${current}"'/")
          echo "$meta" > shell_libs/__meta__.py

      - name: Install shellcodetester
        run: |
          pip install .

      - name: Build artifact
        run: |
          python setup.py sdist

      - name: Publish package in Test Environment
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.test_pypi_password }}
          repository_url: https://test.pypi.org/legacy/
          skip_existing: true
